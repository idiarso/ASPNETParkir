@{
    ViewData["Title"] = "ANPR Live Feed";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">ANPR Live Feed</h5>
                    <div>
                        <span class="badge bg-info" id="detectionStatus">Monitoring</span>
                    </div>
                </div>
                <div class="card-body">
                    <div class="text-center mb-4">
                        <video id="liveVideo" width="720" height="480" class="img-fluid" autoplay></video>
                        <canvas id="overlayCanvas" width="720" height="480" class="position-absolute" style="display:none;"></canvas>
                    </div>
                    
                    <div class="alert alert-info" id="detectionResult" style="display:none;">
                        <strong>Last Detected Plate:</strong>
                        <span id="lastDetectedPlate"></span>
                        <small class="float-end" id="detectionTime"></small>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h5 class="card-title mb-0">Detection History</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped">
                            <thead>
                                <tr>
                                    <th>Time</th>
                                    <th>License Plate</th>
                                    <th>Confidence</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody id="detectionHistory">
                                <!-- Detection history will be populated here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let video = document.getElementById('liveVideo');
        let canvas = document.getElementById('overlayCanvas');
        let detectionStatus = document.getElementById('detectionStatus');
        let detectionResult = document.getElementById('detectionResult');
        let lastDetectedPlate = document.getElementById('lastDetectedPlate');
        let detectionTime = document.getElementById('detectionTime');
        let detectionHistory = document.getElementById('detectionHistory');

        async function startLiveStream() {
            try {
                const stream = await navigator.mediaDevices.getUserMedia({ video: true });
                video.srcObject = stream;
                startDetection();
            } catch (err) {
                console.error('Error accessing camera:', err);
                detectionStatus.textContent = 'Camera Error';
                detectionStatus.className = 'badge bg-danger';
            }
        }

        function startDetection() {
            setInterval(async () => {
                // Capture current frame
                canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);
                const imageData = canvas.toDataURL('image/jpeg');

                try {
                    const response = await fetch('/api/anpr/detect', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ image: imageData })
                    });

                    if (response.ok) {
                        const result = await response.json();
                        if (result.licensePlate) {
                            updateDetectionResult(result);
                            addToHistory(result);
                        }
                    }
                } catch (err) {
                    console.error('Detection error:', err);
                }
            }, 2000); // Process every 2 seconds
        }

        function updateDetectionResult(result) {
            detectionResult.style.display = 'block';
            lastDetectedPlate.textContent = result.licensePlate;
            detectionTime.textContent = new Date().toLocaleTimeString();
        }

        function addToHistory(result) {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${new Date().toLocaleTimeString()}</td>
                <td>${result.licensePlate}</td>
                <td>${(result.confidence * 100).toFixed(1)}%</td>
                <td>
                    <button class="btn btn-sm btn-primary" onclick="processVehicle('${result.licensePlate}')">Process</button>
                </td>
            `;
            detectionHistory.insertBefore(row, detectionHistory.firstChild);

            // Keep only last 10 detections
            if (detectionHistory.children.length > 10) {
                detectionHistory.removeChild(detectionHistory.lastChild);
            }
        }

        async function processVehicle(licensePlate) {
            // Implement vehicle processing logic here
            console.log('Processing vehicle:', licensePlate);
        }

        // Start the live stream when page loads
        startLiveStream();
    </script>
}